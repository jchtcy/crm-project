package com.jch.crm.workbench.mapper;

import com.jch.crm.workbench.domain.ClueActivityRelation;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Wed Sep 27 12:17:25 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Wed Sep 27 12:17:25 CST 2023
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Wed Sep 27 12:17:25 CST 2023
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Wed Sep 27 12:17:25 CST 2023
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Wed Sep 27 12:17:25 CST 2023
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Wed Sep 27 12:17:25 CST 2023
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 批量插入线索和市场活动关联表
     * @param list
     * @return
     */
    int inserClueActivityRelationBatch(List<ClueActivityRelation> list);

    /**
     * 根据条件删除线索和市场活动关联表
     * @param clueActivityRelation
     * @return
     */
    int deleterClueActivityRelationByCondition(ClueActivityRelation clueActivityRelation);

    /**
     * 根据clueId查询线索和市场活动的关联表
     * @param clueId
     * @return
     */
    List<ClueActivityRelation> selectClueActivityRelationByClueId(String clueId);

    /**
     * 根据线索id删除线索和市场活动关联表
     * @param clueId
     * @return
     */
    int deleteClueActivityRelationByClueId(String clueId);
}